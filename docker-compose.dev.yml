version: '3.8'

services:
  job-dorker-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: job-dorker-dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - LOG_LEVEL=debug
      - LOG_PRETTY=true
      - HOST=0.0.0.0
      - PORT=3001
      - DATABASE_URL=sqlite:/app/data/jobs.db
    volumes:
      - .:/app
      - /app/node_modules
      - ./data:/app/data
      - ./reports:/app/reports
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - job-dorker-dev-network
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  redis:
    image: redis:7-alpine
    container_name: job-dorker-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    restart: unless-stopped
    networks:
      - job-dorker-dev-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 10s

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: job-dorker-redis-commander-dev
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - job-dorker-dev-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

volumes:
  redis_dev_data:
    driver: local

networks:
  job-dorker-dev-network:
    driver: bridge
